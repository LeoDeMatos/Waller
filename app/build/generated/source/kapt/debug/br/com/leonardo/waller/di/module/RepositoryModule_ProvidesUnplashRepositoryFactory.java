// Generated by Dagger (https://google.github.io/dagger).
package br.com.leonardo.waller.di.module;

import br.com.leonardo.waller.model.dataManager.UnplashRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class RepositoryModule_ProvidesUnplashRepositoryFactory
    implements Factory<UnplashRepository> {
  private final RepositoryModule module;

  public RepositoryModule_ProvidesUnplashRepositoryFactory(RepositoryModule module) {
    this.module = module;
  }

  @Override
  public UnplashRepository get() {
    return proxyProvidesUnplashRepository(module);
  }

  public static RepositoryModule_ProvidesUnplashRepositoryFactory create(RepositoryModule module) {
    return new RepositoryModule_ProvidesUnplashRepositoryFactory(module);
  }

  public static UnplashRepository proxyProvidesUnplashRepository(RepositoryModule instance) {
    return Preconditions.checkNotNull(
        instance.providesUnplashRepository(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
