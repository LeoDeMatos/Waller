// Generated by Dagger (https://google.github.io/dagger).
package br.com.leonardo.waller.di;

import br.com.leonardo.waller.App;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvidesApplicationFactory implements Factory<App> {
  private final AppModule module;

  public AppModule_ProvidesApplicationFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public App get() {
    return proxyProvidesApplication(module);
  }

  public static AppModule_ProvidesApplicationFactory create(AppModule module) {
    return new AppModule_ProvidesApplicationFactory(module);
  }

  public static App proxyProvidesApplication(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.providesApplication(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
